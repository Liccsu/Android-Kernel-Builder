name: Build Kernel For sm-f907n
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-22.04
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Kuala_Lumpur date "+%Y %m %d %H,%M")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git wget ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace

    - name: Download Proton-Clang
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        # git clone https://github.com/kdrag0n/proton-clang clang --depth=1
        git clone https://github.com/Liccsu/android-kernel-tools.git tools --depth=1
        
    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        # git clone https://github.com/Blackmanx/kernel_realme_sm8250 -b bigshot android-kernel --depth=1
        wget -O Kernel.tar.gz https://api.hostize.com/files/v_zqrL_Woa/download/file.gz
        mkdir android-kernel
        tar -xzpf Kernel.tar.gz -C android-kernel
        mkdir -p android-kernel/toolchain/llvm-arm-toolchain-ship/10.0
        mv tools/gcc android-kernel/toolchain/
        mv tools/clang/host/linux-x86/clang-r407598/* android-kernel/toolchain/llvm-arm-toolchain-ship/10.0/

    # - name: Setup KernelSU
    #   run: |
    #     cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
    #     curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main

    # - name: Setup Configuration for Kernel
    #   run: |
    #     cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
    #     echo "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/vendor/sm8250_defconfig
    #     echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/vendor/sm8250_defconfig

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: build-kernel-${{ env.UPLOADNAME }}
        max-size: 2G

    - name: Build kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export ARCH=arm64
        mkdir out
        # export PATH=$(pwd)/toolchain/llvm-arm-toolchain-ship/10.0/bin:$PATH
        export BUILD_CROSS_COMPILE=$(pwd)/toolchain/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin/aarch64-linux-android-
        export KERNEL_LLVM_BIN=$(pwd)/toolchain/llvm-arm-toolchain-ship/10.0/bin/clang
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export KERNEL_MAKE_ENV="DTC_EXT=$(pwd)/tools/dtc CONFIG_BUILD_ARM64_DT_OVERLAY=y"
        make -j$(nproc --all) -C $(pwd) O=$(pwd)/out $KERNEL_MAKE_ENV ARCH=arm64 CROSS_COMPILE=$BUILD_CROSS_COMPILE REAL_CC=$KERNEL_LLVM_BIN CLANG_TRIPLE=$CLANG_TRIPLE winnerx_kor_single_defconfig
        make -j$(nproc --all) -C $(pwd) O=$(pwd)/out $KERNEL_MAKE_ENV ARCH=arm64 CROSS_COMPILE=$BUILD_CROSS_COMPILE REAL_CC=$KERNEL_LLVM_BIN CLANG_TRIPLE=$CLANG_TRIPLE

    - name: Make Anykernel3
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/osm0sis/AnyKernel3
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!block=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!block=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/is_slot_device=0;/is_slot_device=auto;/g' AnyKernel3/anykernel.sh
        cp android-kernel/out/arch/arm64/boot/Image AnyKernel3/
        rm -rf AnyKernel3/.git* AnyKernel3/README.md

    - name: Upload Image
      uses: actions/upload-artifact@v4
      with:
        name: Image-KernelSU-${{ env.BUILD_TIME }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/Image

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-bigshot-KernelSU-${{ env.BUILD_TIME }}
        path: kernel_workspace/AnyKernel3/*
